apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bloodlink-ingress
  namespace: bloodlink-production
  labels:
    app: bloodlink-africa
    environment: production
  annotations:
    # Ingress class
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: blob:; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https: wss:; frame-src 'none'; object-src 'none'; base-uri 'self';" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://bloodlink.africa,https://www.bloodlink.africa"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"
    
    # Compression
    nginx.ingress.kubernetes.io/enable-gzip: "true"
    nginx.ingress.kubernetes.io/gzip-types: "text/plain,text/css,text/xml,text/javascript,application/javascript,application/xml+rss,application/json"
    
    # Proxy settings
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/session-cookie-name: "bloodlink-session"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-path: "/"
    
    # Monitoring
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "false"
    
spec:
  tls:
  - hosts:
    - bloodlink.africa
    - www.bloodlink.africa
    - api.bloodlink.africa
    secretName: bloodlink-tls-secret
  rules:
  - host: bloodlink.africa
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bloodlink-frontend-service
            port:
              number: 80
  - host: www.bloodlink.africa
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bloodlink-frontend-service
            port:
              number: 80
  - host: api.bloodlink.africa
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bloodlink-api-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bloodlink-admin-ingress
  namespace: bloodlink-production
  labels:
    app: bloodlink-africa
    component: admin
    environment: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Admin-specific security
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: admin-auth-secret
    nginx.ingress.kubernetes.io/auth-realm: "BloodLink Africa Admin Access"
    
    # Enhanced rate limiting for admin
    nginx.ingress.kubernetes.io/rate-limit: "20"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "5"
    
spec:
  tls:
  - hosts:
    - admin.bloodlink.africa
    secretName: bloodlink-admin-tls-secret
  rules:
  - host: admin.bloodlink.africa
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bloodlink-admin-service
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: admin-auth-secret
  namespace: bloodlink-production
  labels:
    app: bloodlink-africa
    component: admin
    environment: production
type: Opaque
data:
  # htpasswd generated: admin:$2y$10$... (replace with actual hash)
  auth: YWRtaW46JDJ5JDEwJE5vdGFSZWFsUGFzc3dvcmRIYXNoSGVyZQ==
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app: bloodlink-africa
    environment: production
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@bloodlink.africa
    privateKeySecretRef:
      name: letsencrypt-prod-private-key
    solvers:
    - http01:
        ingress:
          class: nginx
    - dns01:
        route53:
          region: us-east-1
          accessKeyID: AKIAIOSFODNN7EXAMPLE
          secretAccessKeySecretRef:
            name: route53-credentials
            key: secret-access-key
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: bloodlink-tls-certificate
  namespace: bloodlink-production
  labels:
    app: bloodlink-africa
    environment: production
spec:
  secretName: bloodlink-tls-secret
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - bloodlink.africa
  - www.bloodlink.africa
  - api.bloodlink.africa
  - admin.bloodlink.africa
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: bloodlink-ingress-network-policy
  namespace: bloodlink-production
  labels:
    app: bloodlink-africa
    environment: production
spec:
  podSelector:
    matchLabels:
      app: bloodlink-frontend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  - from:
    - namespaceSelector:
        matchLabels:
          name: bloodlink-production
    - podSelector:
        matchLabels:
          app: bloodlink-api
    ports:
    - protocol: TCP
      port: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress-custom-config
  namespace: ingress-nginx
  labels:
    app: nginx-ingress
    environment: production
data:
  # Custom nginx configuration
  proxy-buffer-size: "8k"
  proxy-buffers-number: "8"
  proxy-busy-buffers-size: "16k"
  
  # Security settings
  hide-headers: "Server,X-Powered-By"
  server-tokens: "false"
  
  # Performance settings
  worker-processes: "auto"
  worker-connections: "1024"
  keepalive-timeout: "65"
  keepalive-requests: "100"
  
  # SSL settings
  ssl-protocols: "TLSv1.2 TLSv1.3"
  ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
  ssl-prefer-server-ciphers: "true"
  ssl-session-cache: "shared:SSL:10m"
  ssl-session-timeout: "10m"
  
  # Rate limiting
  limit-req-status-code: "429"
  limit-conn-status-code: "429"
  
  # Logging
  log-format-upstream: '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id'
  
  # Custom error pages
  custom-http-errors: "404,503"
  
  # Monitoring
  enable-vts-status: "true"
  vts-status-zone-size: "10m"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-custom-errors
  namespace: ingress-nginx
  labels:
    app: nginx-ingress-custom-errors
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: nginx-ingress-custom-errors
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-custom-errors
  namespace: ingress-nginx
  labels:
    app: nginx-ingress-custom-errors
    environment: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-ingress-custom-errors
  template:
    metadata:
      labels:
        app: nginx-ingress-custom-errors
    spec:
      containers:
      - name: custom-errors
        image: quay.io/kubernetes-ingress-controller/custom-error-pages:0.4
        ports:
        - containerPort: 8080
        env:
        - name: ERROR_FILES_PATH
          value: "/www"
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: error-pages
          mountPath: /www
          readOnly: true
      volumes:
      - name: error-pages
        configMap:
          name: custom-error-pages
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-error-pages
  namespace: ingress-nginx
  labels:
    app: nginx-ingress-custom-errors
    environment: production
data:
  404.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Page Not Found - BloodLink Africa</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background: #f5f5f5; }
            .container { max-width: 600px; margin: 0 auto; background: white; padding: 40px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
            h1 { color: #e74c3c; font-size: 3em; margin-bottom: 20px; }
            p { color: #666; font-size: 1.2em; margin-bottom: 30px; }
            .btn { background: #3498db; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block; }
            .logo { width: 100px; height: 100px; margin: 0 auto 30px; background: #e74c3c; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-size: 2em; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="logo">🩸</div>
            <h1>404</h1>
            <p>The page you're looking for could not be found.</p>
            <p>Let's get you back to helping save lives.</p>
            <a href="/" class="btn">Return Home</a>
        </div>
    </body>
    </html>
  
  503.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Service Unavailable - BloodLink Africa</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background: #f5f5f5; }
            .container { max-width: 600px; margin: 0 auto; background: white; padding: 40px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
            h1 { color: #f39c12; font-size: 3em; margin-bottom: 20px; }
            p { color: #666; font-size: 1.2em; margin-bottom: 30px; }
            .logo { width: 100px; height: 100px; margin: 0 auto 30px; background: #f39c12; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-size: 2em; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="logo">🩸</div>
            <h1>503</h1>
            <p>BloodLink Africa is temporarily unavailable.</p>
            <p>We're working to restore service as quickly as possible.</p>
            <p>Please try again in a few minutes.</p>
        </div>
    </body>
    </html>
