{
  "info": {
    "name": "BloodLink Africa API",
    "description": "Comprehensive API collection for BloodLink Africa blood donation management platform",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL if not already set",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:3000/api');",
          "}",
          "",
          "// Add timestamp for unique data",
          "pm.environment.set('timestamp', Date.now());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for response time",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "// Global test for response format",
          "if (pm.response.code === 200 || pm.response.code === 201) {",
          "    pm.test('Response has success field', function () {",
          "        const jsonData = pm.response.json();",
          "        pm.expect(jsonData).to.have.property('success');",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "donorId",
      "value": "",
      "type": "string"
    },
    {
      "key": "appointmentId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test{{timestamp}}@bloodlink.africa\",\n  \"password\": \"TestPassword123!\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"role\": \"donor\",\n  \"phone\": \"+254712345678\",\n  \"dateOfBirth\": \"1990-05-15\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('tokens');",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('authToken', jsonData.data.tokens.accessToken);",
                  "    pm.environment.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "    pm.environment.set('userId', jsonData.data.user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"donor@bloodlink.africa\",\n  \"password\": \"DonorPass123!\",\n  \"rememberMe\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('tokens');",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('authToken', jsonData.data.tokens.accessToken);",
                  "    pm.environment.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "    pm.environment.set('userId', jsonData.data.user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token refresh successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('accessToken');",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('authToken', jsonData.data.accessToken);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Donors",
      "item": [
        {
          "name": "Create Donor",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"bloodType\": \"O+\",\n  \"weight\": 70,\n  \"height\": 175,\n  \"medicalHistory\": [\"No significant medical history\"],\n  \"emergencyContact\": {\n    \"name\": \"Jane Doe\",\n    \"phone\": \"+254712345679\",\n    \"relationship\": \"Spouse\",\n    \"email\": \"jane.doe@example.com\"\n  },\n  \"address\": {\n    \"street\": \"123 Main Street\",\n    \"city\": \"Nairobi\",\n    \"state\": \"Nairobi County\",\n    \"country\": \"Kenya\",\n    \"postalCode\": \"00100\",\n    \"coordinates\": {\n      \"latitude\": -1.2921,\n      \"longitude\": 36.8219\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/donors",
              "host": ["{{baseUrl}}"],
              "path": ["donors"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Donor created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data.bloodType).to.equal('O+');",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('donorId', jsonData.data.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Donors List",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/donors?page=1&limit=20&sort=createdAt:desc",
              "host": ["{{baseUrl}}"],
              "path": ["donors"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "sort",
                  "value": "createdAt:desc"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Donors list retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    pm.expect(jsonData).to.have.property('pagination');",
                  "});",
                  "",
                  "pm.test('Pagination structure is correct', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.pagination).to.have.property('page');",
                  "    pm.expect(jsonData.pagination).to.have.property('limit');",
                  "    pm.expect(jsonData.pagination).to.have.property('total');",
                  "    pm.expect(jsonData.pagination).to.have.property('totalPages');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Donor by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/donors/{{donorId}}",
              "host": ["{{baseUrl}}"],
              "path": ["donors", "{{donorId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Donor details retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data.id).to.equal(pm.environment.get('donorId'));",
                  "});",
                  "",
                  "pm.test('Donor has required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('bloodType');",
                  "    pm.expect(jsonData.data).to.have.property('status');",
                  "    pm.expect(jsonData.data).to.have.property('createdAt');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Donor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"weight\": 75,\n  \"height\": 180,\n  \"medicalHistory\": [\"No significant medical history\", \"Updated medical information\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/donors/{{donorId}}",
              "host": ["{{baseUrl}}"],
              "path": ["donors", "{{donorId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Donor updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.weight).to.equal(75);",
                  "    pm.expect(jsonData.data.height).to.equal(180);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Search Donors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/donors?search=test&bloodType=O+&status=active",
              "host": ["{{baseUrl}}"],
              "path": ["donors"],
              "query": [
                {
                  "key": "search",
                  "value": "test"
                },
                {
                  "key": "bloodType",
                  "value": "O+"
                },
                {
                  "key": "status",
                  "value": "active"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Search results returned successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Appointments",
      "item": [
        {
          "name": "Create Appointment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"donorId\": \"{{donorId}}\",\n  \"scheduledAt\": \"2024-12-25T10:00:00Z\",\n  \"type\": \"whole_blood\",\n  \"notes\": \"Regular donation appointment\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/appointments",
              "host": ["{{baseUrl}}"],
              "path": ["appointments"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Appointment created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data.type).to.equal('whole_blood');",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('appointmentId', jsonData.data.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Appointments List",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/appointments?page=1&limit=20&status=scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["appointments"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "status",
                  "value": "scheduled"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Appointments list retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Appointment Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\",\n  \"notes\": \"Appointment confirmed by donor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/appointments/{{appointmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["appointments", "{{appointmentId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Appointment updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.status).to.equal('confirmed');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Inventory",
      "item": [
        {
          "name": "Get Blood Inventory",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/inventory",
              "host": ["{{baseUrl}}"],
              "path": ["inventory"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Inventory retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Inventory items have required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data.length > 0) {",
                  "        pm.expect(jsonData.data[0]).to.have.property('bloodType');",
                  "        pm.expect(jsonData.data[0]).to.have.property('quantity');",
                  "        pm.expect(jsonData.data[0]).to.have.property('status');",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Filter Inventory by Blood Type",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/inventory?bloodType=O+",
              "host": ["{{baseUrl}}"],
              "path": ["inventory"],
              "query": [
                {
                  "key": "bloodType",
                  "value": "O+"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Filtered inventory retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "AI/ML",
      "item": [
        {
          "name": "Donor Matching",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bloodType\": \"O+\",\n  \"urgency\": \"high\",\n  \"location\": {\n    \"latitude\": -1.2921,\n    \"longitude\": 36.8219,\n    \"radius\": 10\n  },\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ai/donor-matching",
              "host": ["{{baseUrl}}"],
              "path": ["ai", "donor-matching"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Donor matching completed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Matched donors have required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data.length > 0) {",
                  "        pm.expect(jsonData.data[0]).to.have.property('donor');",
                  "        pm.expect(jsonData.data[0]).to.have.property('matchScore');",
                  "        pm.expect(jsonData.data[0]).to.have.property('distance');",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
